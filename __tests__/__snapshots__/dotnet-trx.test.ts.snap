// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dotnet-trx tests matches report snapshot 1`] = `
TestRunResult {
  "path": "fixtures/dotnet-trx.trx",
  "suites": [
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": {
                "details": "System.DivideByZeroException : Attempted to divide by zero.
   at DotnetTests.Unit.Calculator.Div(Int32 a, Int32 b) in C:\\Users\\Michal\\Workspace\\dorny\\test-reporter\\reports\\dotnet\\DotnetTests.Unit\\Calculator.cs:line 9
   at DotnetTests.XUnitTests.CalculatorTests.Exception_In_TargetTest() in C:\\Users\\Michal\\Workspace\\dorny\\test-reporter\\reports\\dotnet\\DotnetTests.XUnitTests\\CalculatorTests.cs:line 33",
                "line": 9,
                "message": "System.DivideByZeroException : Attempted to divide by zero.",
                "path": "DotnetTests.Unit/Calculator.cs",
              },
              "name": "DotnetTests.XUnitTests.CalculatorTests.Exception_In_TargetTest",
              "result": "failed",
              "time": 0.8377,
            },
            TestCaseResult {
              "error": {
                "details": "Assert.True() Failure
Expected: True
Actual:   False
   at DotnetTests.XUnitTests.CalculatorTests.Theory_With_Custom_Name(Int32 i) in C:\\Users\\Michal\\Workspace\\dorny\\test-reporter\\reports\\dotnet\\DotnetTests.XUnitTests\\CalculatorTests.cs:line 67",
                "line": 67,
                "message": "Assert.True() Failure
Expected: True
Actual:   False",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "Should be even number(i: 3)",
              "result": "failed",
              "time": 0.6537000000000001,
            },
            TestCaseResult {
              "error": {
                "details": "Assert.Equal() Failure
Expected: 3
Actual:   2
   at DotnetTests.XUnitTests.CalculatorTests.Failing_Test() in C:\\Users\\Michal\\Workspace\\dorny\\test-reporter\\reports\\dotnet\\DotnetTests.XUnitTests\\CalculatorTests.cs:line 27",
                "line": 27,
                "message": "Assert.Equal() Failure
Expected: 3
Actual:   2",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "DotnetTests.XUnitTests.CalculatorTests.Failing_Test",
              "result": "failed",
              "time": 3.8697,
            },
            TestCaseResult {
              "error": {
                "details": "System.Exception : Test
   at DotnetTests.XUnitTests.CalculatorTests.Exception_In_Test() in C:\\Users\\Michal\\Workspace\\dorny\\test-reporter\\reports\\dotnet\\DotnetTests.XUnitTests\\CalculatorTests.cs:line 39",
                "line": 39,
                "message": "System.Exception : Test",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "DotnetTests.XUnitTests.CalculatorTests.Exception_In_Test",
              "result": "failed",
              "time": 2.5175,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DotnetTests.XUnitTests.CalculatorTests.Skipped_Test",
              "result": "skipped",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DotnetTests.XUnitTests.CalculatorTests.Passing_Test",
              "result": "success",
              "time": 0.1365,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DotnetTests.XUnitTests.CalculatorTests.Is_Even_Number(i: 2)",
              "result": "success",
              "time": 0.0078,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Custom Name",
              "result": "success",
              "time": 0.1371,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Should be even number(i: 2)",
              "result": "success",
              "time": 0.0097,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DotnetTests.XUnitTests.CalculatorTests.Timeout_Test",
              "result": "success",
              "time": 108.42580000000001,
            },
            TestCaseResult {
              "error": {
                "details": "Assert.True() Failure
Expected: True
Actual:   False
   at DotnetTests.XUnitTests.CalculatorTests.Is_Even_Number(Int32 i) in C:\\Users\\Michal\\Workspace\\dorny\\test-reporter\\reports\\dotnet\\DotnetTests.XUnitTests\\CalculatorTests.cs:line 59",
                "line": 59,
                "message": "Assert.True() Failure
Expected: True
Actual:   False",
                "path": "DotnetTests.XUnitTests/CalculatorTests.cs",
              },
              "name": "DotnetTests.XUnitTests.CalculatorTests.Is_Even_Number(i: 3)",
              "result": "failed",
              "time": 0.41409999999999997,
            },
          ],
        },
      ],
      "name": "DotnetTests.XUnitTests.CalculatorTests",
      "totalTime": undefined,
    },
  ],
  "totalTime": undefined,
}
`;

exports[`dotnet-trx tests report from SilentNotes test results matches snapshot 1`] = `
TestRunResult {
  "path": "fixtures/external/SilentNotes.trx",
  "suites": [
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsStringToSecureString",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithSameContent",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithDifferentPassword",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ValidateRejectsInvalidCredentials",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToString",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ValidateAcceptsValidCredentials",
              "result": "success",
              "time": 3,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageCredentialsTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoRefreshToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsAccessDeniedExceptionWithInvalidToken",
              "result": "success",
              "time": 6,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoFetchToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoOpenAuthorizationPageInBrowser",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 95,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.DropboxCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 161,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidUrl",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SecureSslConnectionWorks",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidUsername",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithHttpInsteadOfFtp",
              "result": "success",
              "time": 4,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidPassword",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SanitizeCredentials_ChangesInvalidPrefix",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.FtpCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ChoosesCorrectUrlForGmxNetEmail",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ChoosesCorrectUrlForGmxComEmail",
              "result": "success",
              "time": 6,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.GmxCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoOpenAuthorizationPageInBrowser",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoFetchToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoRefreshToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 40,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.GoogleCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoFetchToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 15,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoRefreshToken",
              "result": "skipped",
              "time": 0,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ReallyDoOpenAuthorizationPageInBrowser",
              "result": "skipped",
              "time": 0,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.OnedriveCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ParseGmxWebdavResponseCorrectly",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FileLifecycleWorks",
              "result": "success",
              "time": 14,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidUsername",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ThrowsWithInvalidPath",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseStratoWebdavResponseCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageProviders.WebdavCloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "SetExpiryDateBySecondsWorks",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithSameContent",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsTrueIfExpired",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SetExpiryDateBySecondsWorksWithVeryShortPeriod",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SetExpiryDateBySecondsWorksWithNull",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualWorksWithNullDate",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsTrueIfNoExpirationDate",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsFalseForTokenFlow",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "NeedsRefreshReturnsFalseIfNotExpired",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.CloudStorageTokenTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ParsesAllErrorCodesCorrectly",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParsesUnknownErrorCodeCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParsesNullErrorCodeCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.OAuth2.AuthorizationResponseErrorTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldGoogleSuccessResponse",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlUsesCodeVerifier",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlLeavesOutOptionalParameters",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlUsesAllParameters",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlEscapesParameters",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "BuildAuthorizationRequestUrlThrowsWithMissingRedirectUrlForTokenFlow",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldDropboxRejectResponse",
              "result": "success",
              "time": 9,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldDropboxSuccessResponse",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "ParseRealWorldGoogleRejectResponse",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.OAuth2.OAuth2UtilsTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "BuildOAuth2AuthorizationRequestUrlWorks",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FetchTokenThrowsWithWrongState",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FetchTokenCanInterpretGoogleResponse",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "RefreshTokenCanInterpretGoogleResponse",
              "result": "success",
              "time": 3,
            },
            TestCaseResult {
              "error": undefined,
              "name": "FetchTokenReturnsNullForDeniedAccess",
              "result": "success",
              "time": 1,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.OAuth2CloudStorageClientTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsUnicodeBytesToSecureString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "AreEqualsWorksCorrectly",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsUtf8BytesToSecureString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsStringToSecureString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToUnicodeBytes",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToString",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "CorrectlyConvertsSecureStringToUtf8Bytes",
              "result": "success",
              "time": 0.00009999999999999999,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.SecureStringExtensionsTest",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "SerializedJsonDoesNotContainNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedXmlDoesNotContainNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedDatacontractCanBeReadBack",
              "result": "success",
              "time": 16,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedDatacontractDoesNotContainPlaintextData",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "EncryptBeforeSerializationProtectsAllNecessaryProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedJsonCanBeReadBack",
              "result": "success",
              "time": 7,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedXmlDoesNotContainPlaintextData",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DecryptAfterDesrializationCanReadAllPropertiesBack",
              "result": "success",
              "time": 2,
            },
            TestCaseResult {
              "error": undefined,
              "name": "EncryptBeforeSerializationRespectsNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedJsonDoesNotContainPlaintextData",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedDatacontractDoesNotContainNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "DecryptAfterDesrializationRespectsNullProperties",
              "result": "success",
              "time": 0.00009999999999999999,
            },
            TestCaseResult {
              "error": undefined,
              "name": "SerializedXmlCanBeReadBack",
              "result": "success",
              "time": 16,
            },
          ],
        },
      ],
      "name": "VanillaCloudStorageClientTest.SerializeableCloudStorageCredentialsTest",
      "totalTime": undefined,
    },
  ],
  "totalTime": undefined,
}
`;

exports[`dotnet-trx tests scenario matches report snapshot 1`] = `
TestRunResult {
  "path": "fixtures/dotnet-trx-scenario.trx",
  "suites": [
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": "Test scenario",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "01. Step 1",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "02. Step 2",
              "result": "success",
              "time": 1,
            },
          ],
        },
        TestGroupResult {
          "name": "Theory scenario(number: 1)",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "01. Theory step 1",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "02. Theory step 2",
              "result": "success",
              "time": 1,
            },
          ],
        },
        TestGroupResult {
          "name": "Theory scenario(number: 2)",
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "01. Theory step 1",
              "result": "success",
              "time": 1,
            },
            TestCaseResult {
              "error": undefined,
              "name": "02. Theory step 2",
              "result": "success",
              "time": 1,
            },
          ],
        },
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "Simple Theory(index: 2, enable: False)",
              "result": "success",
              "time": 7.5501,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Simple Theory(index: 1, enable: True)",
              "result": "success",
              "time": 0.2876,
            },
            TestCaseResult {
              "error": undefined,
              "name": "Simple Test",
              "result": "success",
              "time": 0.0596,
            },
          ],
        },
      ],
      "name": "Rail.IntegrationTests.Tests.Dummy",
      "totalTime": undefined,
    },
    TestSuiteResult {
      "groups": [
        TestGroupResult {
          "name": null,
          "tests": [
            TestCaseResult {
              "error": undefined,
              "name": "Simple2 Test",
              "result": "success",
              "time": 7.5683,
            },
          ],
        },
      ],
      "name": "Rail.IntegrationTests.Tests.Dummy2",
      "totalTime": undefined,
    },
  ],
  "totalTime": undefined,
}
`;
